JavaScript:
a. prototype based programming
b. new features of JS (ES6 onward)

React JS:
a. Introduction
b. create react js application from scratch without help of any tool
c. create react js application with the help of creat-react-app tool
d. different concepts:
	1. component and element
	2. functional and class component
	3. state and props in component
	4. lifecycle of component
	5. handle error
	6. Virtual DOM
	7. Pure Component, memo
	8. ref
	9. list of elements (key)
	10. styling
	11. redux
	12. react -redux with asynchronous
	13. redux thunk 
	14. redux saga
	15. forms
	16. static type checking
e. testing in React
f. real time deployment:
	1. dockerize the react app (dev & prod mode)
	2. push the docker image in docker hub
	2. run a container in Azure by pulling the image from docker hub


VS Code extensions:
ES7 React/Redux/React-Native/JS snippets
vscode-icons
HTML Boilerplate
Babel JavaScript
Babel ES6/ES7
prettier
Prettier Formatter
Webpack
Webpack Snippets


JavaScript:

	1. how to create an object in JS?
	2. what is protoype?
	3. pupose of prototype
	4. contextual binding - closure and lexical 'this' problem
	5. arrow operator (ES6 new feature)
	6. call, apply, bind
	7. object inheritance
	8. prototype chaining
	9. new features (ES6-2015): class, extends, constructor, super, object destructuring, const, let, spread operator
	10. Modules and its purpose:
		abstract code: to delegate functionality to specialised libraries so that we don't have 
                to understand the complexity of their actual implementation
		encapsulate code: to hide code inside the module if we don't want the code to be changed
		reuse code: to avoid writing the same code over and over again
		manage dependencies: to easily change dependencies without rewriting our code
	11. Module formats: IIFE, Common JS, AMD, UMD, ES6 modules,...
	12. module loaders

